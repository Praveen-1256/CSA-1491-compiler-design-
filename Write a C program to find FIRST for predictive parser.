#include <stdio.h>
#include <string.h>
#include <ctype.h>
#define MAX_PRODUCTIONS 100
#define MAX_PROD_SIZE 50
#define MAX_FIRST_SIZE 20

char productions[MAX_PRODUCTIONS][MAX_PROD_SIZE];
char non_terminals[MAX_PRODUCTIONS];
char first_sets[MAX_PRODUCTIONS][MAX_FIRST_SIZE];
int num_productions = 0;
int num_non_terminals = 0;

void compute_first(char non_terminal) {
    int i, j, k;
    int epsilon_flag = 0;
    for (i = 0; i < num_productions; i++) {
        if (productions[i][0] == non_terminal) {
            
            if (productions[i][2] == '\0') {
                first_sets[num_non_terminals][0] = '#';
                epsilon_flag = 1;
                break;
            }
            
            if (!isupper(productions[i][2])) {
                first_sets[num_non_terminals][0] = productions[i][2];
                break;
            }
            
            compute_first(productions[i][2]);
           
            int added_flag = 0;
            for (j = 0; j < num_non_terminals; j++) {
                if (non_terminals[j] == productions[i][2]) {
                    for (k = 0; k < MAX_FIRST_SIZE && first_sets[j][k] != '\0'; k++) {
                        if (first_sets[j][k] != '#') {
                            int l;
                            for (l = 0; l < MAX_FIRST_SIZE; l++) {
                                if (first_sets[num_non_terminals][l] == '\0') {
                                    first_sets[num_non_terminals][l] = first_sets[j][k];
                                    added_flag = 1;
                                    break;
                                } else if (first_sets[num_non_terminals][l] == first_sets[j][k]) {
                                    added_flag = 1;
                                    break;
                                }
                            }
                            if (added_flag) {
                                break;
                            }
                        }
                    }
                    if (!added_flag) {
                        break;
                    }
                }
            }
            
            if (added_flag) {
                for (k = 0; k < MAX_FIRST_SIZE && first_sets[j][k] != '\0'; k++) {
                    if (first_sets[j][k] == '#') {
                        int l;
                        for (l = 0; l < MAX_FIRST_SIZE; l++) {
                            if (first_sets[num_non_terminals][l] == '\0') {
                                first_sets[num_non_terminals][l] = '#';
                                break;
                            } else if (first_sets[num_non_terminals][l] == '#') {
                                break;
                            }
                        }
                        break;
                    }
                }
            }
        }
    }
    if (epsilon_flag) {
        first_sets[num_non_terminals][1] = '\0';
    } else {
        first_sets[num_non_terminals][MAX_FIRST_SIZE - 1] = '\0';
